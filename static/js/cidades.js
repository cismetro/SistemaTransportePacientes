// Script para gerenciar as cidades de S√£o Paulo
class CidadesSP {
    constructor() {
        this.cidades = [];
        this.selectElement = null;
        this.inputElement = null;
        this.isLoaded = false;
    }

    // Carregar as cidades do JSON
    async loadCidades() {
        try {
            console.log('üèôÔ∏è Carregando cidades de S√£o Paulo...');
            const response = await fetch('/static/data/cidades_sp.json');
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const data = await response.json();
            this.cidades = data.cidades.sort(); // Ordenar alfabeticamente
            this.isLoaded = true;
            
            console.log(`‚úÖ ${this.cidades.length} cidades carregadas!`);
            return this.cidades;
        } catch (error) {
            console.error('‚ùå Erro ao carregar cidades:', error);
            // Fallback com algumas cidades principais
            this.cidades = [
                'S√£o Paulo', 'Campinas', 'Santos', 'Ribeir√£o Preto', 
                'Sorocaba', 'Guarulhos', 'Osasco', 'Cosm√≥polis',
				'Adamantina', 'Adolfo', 'Agua√≠', '√Åguas da Prata', '√Åguas de Lind√≥ia',
				'√Åguas de Santa B√°rbara', '√Åguas de S√£o Pedro', 'Agudos', 'Alambari', 'Alfredo Marcondes',
				'Altair', 'Altin√≥polis', 'Alto Alegre', 'Alum√≠nio', '√Ålvares Florence',
				'√Ålvares Machado', '√Ålvaro de Carvalho', 'Alvinl√¢ndia', 'Americana', 'Am√©rico Brasiliense',
				'Am√©rico de Campos', 'Amparo', 'Anal√¢ndia', 'Andradina', 'Angatuba',
				'Anhembi', 'Anhumas', 'Aparecida', 'Aparecida d\'Oeste', 'Apia√≠',
				'Ara√ßariguama', 'Ara√ßatuba', 'Ara√ßoiaba da Serra', 'Aramina', 'Arandu',
				'Arape√≠', 'Araraquara', 'Araras', 'Arco-√çris', 'Arealva',
				'Areias', 'Arei√≥polis', 'Ariranha', 'Artur Nogueira', 'Aruj√°',
				'Asp√°sia', 'Assis', 'Atibaia', 'Auriflama', 'Ava√≠',
				'Avanhandava', 'Avar√©', 'Bady Bassitt', 'Balbinos', 'B√°lsamo',
				'Bananal', 'Bar√£o de Antonina', 'Barbosa', 'Bariri', 'Barra Bonita',
				'Barra do Chap√©u', 'Barra do Turvo', 'Barretos', 'Barrinha', 'Barueri',
				'Bastos', 'Batatais', 'Bauru', 'Bebedouro', 'Bento de Abreu',
				'Bernardino de Campos', 'Bertioga', 'Bilac', 'Birigui', 'Biritiba-Mirim',
				'Boa Esperan√ßa do Sul', 'Bocaina', 'Bofete', 'Boituva', 'Bom Jesus dos Perd√µes',
				'Bom Sucesso de Itarar√©', 'Bor√°', 'Borac√©ia', 'Borborema', 'Borebi',
				'Botucatu', 'Bragan√ßa Paulista', 'Bra√∫na', 'Brejo Alegre', 'Brodowski',
				'Brotas', 'Buri', 'Buritama', 'Buritizal', 'Cabr√°lia Paulista',
				'Cabre√∫va', 'Ca√ßapava', 'Cachoeira Paulista', 'Caconde', 'Cafel√¢ndia',
				'Caiabu', 'Caieiras', 'Caiu√°', 'Cajamar', 'Cajati',
				'Cajobi', 'Cajuru', 'Campina do Monte Alegre', 'Campinas', 'Campo Limpo Paulista',
				'Campos do Jord√£o', 'Campos Novos Paulista', 'Canan√©ia', 'Canas', 'C√¢ndido Mota',
				'C√¢ndido Rodrigues', 'Canitar', 'Cap√£o Bonito', 'Capela do Alto', 'Capivari',
				'Caraguatatuba', 'Carapicu√≠ba', 'Cardoso', 'Casa Branca', 'C√°ssia dos Coqueiros',
				'Castilho', 'Catanduva', 'Catigu√°', 'Cedral', 'Cerqueira C√©sar',
				'Cerquilho', 'Ces√°rio Lange', 'Charqueada', 'Chavantes', 'Clementina',
				'Colina', 'Col√¥mbia', 'Conchal', 'Conchas', 'Cordeir√≥polis',
				'Coroados', 'Coronel Macedo', 'Corumbata√≠', 'Cosm√≥polis', 'Cosmorama',
				'Cotia', 'Cravinhos', 'Cristais Paulista', 'Cruz√°lia', 'Cruzeiro',
				'Cubat√£o', 'Cunha', 'Descalvado', 'Diadema', 'Dirce Reis',
				'Divinol√¢ndia', 'Dobrada', 'Dois C√≥rregos', 'Dolcin√≥polis', 'Dourado',
				'Dracena', 'Duartina', 'Dumont', 'Echapor√£', 'Eldorado',
				'Elias Fausto', 'Elisi√°rio', 'Emba√∫ba', 'Embu das Artes', 'Embu-Gua√ßu',
				'Emilian√≥polis', 'Engenheiro Coelho', 'Esp√≠rito Santo do Pinhal', 'Esp√≠rito Santo do Turvo', 'Estiva Gerbi','Estrela d\'Oeste', 'Estrela do Norte', 'Euclides da Cunha Paulista', 'Fartura', 'Fernando Prestes','Fernand√≥polis', 'Fern√£o', 'Ferraz de Vasconcelos', 'Flora Rica', 'Floreal',			'Fl√≥rida Paulista', 'Flor√≠nea', 'Franca', 'Francisco Morato', 'Franco da Rocha',
				'Gabriel Monteiro', 'G√°lia', 'Gar√ßa', 'Gast√£o Vidigal', 'Gavi√£o Peixoto',
				'General Salgado', 'Getulina', 'Glic√©rio', 'Guai√ßara', 'Guaimb√™',
				'Gua√≠ra', 'Guapia√ßu', 'Guapiara', 'Guar√°', 'Guara√ßa√≠',
				'Guaraci', 'Guarani d\'Oeste', 'Guarant√£', 'Guararapes', 'Guararema',
				'Guaratinguet√°', 'Guare√≠', 'Guariba', 'Guaruj√°', 'Guarulhos',
				'Guatapar√°', 'Guzol√¢ndia', 'Hercul√¢ndia', 'Holambra', 'Hortol√¢ndia',
				'Iacanga', 'Iacri', 'Iaras', 'Ibat√©', 'Ibir√°',
				'Ibirarema', 'Ibitinga', 'Ibi√∫na', 'Ic√©m', 'Iep√™',
				'Igara√ßu do Tiet√™', 'Igarapava', 'Igarat√°', 'Iguape', 'Ilhabela',
				'Ilha Comprida', 'Ilha Solteira', 'Indaiatuba', 'Indiana', 'Indiapor√£',
				'In√∫bia Paulista', 'Ipaussu', 'Iper√≥', 'Ipe√∫na', 'Ipigu√°',
				'Iporanga', 'Ipu√£', 'Iracem√°polis', 'Irapu√£', 'Irapuru',
				'Itaber√°', 'Itai', 'Itajobi', 'Itaju', 'Itanha√©m',
				'Ita√≥ca', 'Itapecerica da Serra', 'Itapetininga', 'Itapeva', 'Itapevi',
				'Itapira', 'Itapirapu√£ Paulista', 'It√°polis', 'Itaporanga', 'Itapu√≠',
				'Itapura', 'Itaquaquecetuba', 'Itarar√©', 'Itariri', 'Itatiba',
				'Itatinga', 'Itirapina', 'Itirapu√£', 'Itobi', 'Itu',
				'Itupeva', 'Ituverava', 'Jaborandi', 'Jaboticabal', 'Jacare√≠',
				'Jaci', 'Jacupiranga', 'Jaguari√∫na', 'Jales', 'Jambeiro',
				'Jandira', 'Jardin√≥polis', 'Jarinu', 'Ja√∫', 'Jeriquara',
				'Joan√≥polis', 'Jo√£o Ramalho', 'Jos√© Bonif√°cio', 'J√∫lio Mesquita', 'Jumirim',
				'Jundia√≠', 'Junqueir√≥polis', 'Juqui√°', 'Juquitiba', 'Lagoinha',
				'Laranjal Paulista', 'Lav√≠nia', 'Lavrinhas', 'Leme', 'Len√ß√≥is Paulista',
				'Limeira', 'Lind√≥ia', 'Lins', 'Lorena', 'Lourdes',
				'Louveira', 'Luc√©lia', 'Lucian√≥polis', 'Lu√≠s Ant√¥nio', 'Luizi√¢nia',
				'Lup√©rcio', 'Lut√©cia', 'Macatuba', 'Macaubal', 'Maced√¥nia',
				'Magda', 'Mairinque', 'Mairipor√£', 'Manduri', 'Marab√° Paulista',
				'Maraca√≠', 'Marapoama', 'Mari√°polis', 'Mar√≠lia', 'Marin√≥polis',
				'Martin√≥polis', 'Mat√£o', 'Mau√°', 'Mendon√ßa', 'Meridiano','Mes√≥polis', 'Miguel√≥polis', 'Mineiros do Tiet√™', 'Mira Estrela', 'Miracatu',
			'Mirand√≥polis', 'Mirante do Paranapanema', 'Mirassol', 'Mirassol√¢ndia', 'Mococa',
			'Mogi das Cruzes', 'Mogi Gua√ßu', 'Moji Mirim', 'Mombuca', 'Mon√ß√µes',
			'Mongagu√°', 'Monte Alegre do Sul', 'Monte Alto', 'Monte Apraz√≠vel', 'Monte Azul Paulista','Monte Castelo','Monte Mor', 'Monteiro Lobato', 'Morro Agudo', 'Morungaba','Motuca', 'Murutinga do Sul', 'Nantes', 'Narandiba', 'Natividade da Serra','Nazar√© Paulista', 'Neves Paulista', 'Nhandeara', 'Nipo√£', 'Nova Alian√ßa','Nova Campina', 'Nova Cana√£ Paulista', 'Nova Castilho', 'Nova Europa', 'Nova Granada','Nova Guataporanga','Nova Independ√™ncia', 'Nova Luzit√¢nia', 'Nova Odessa', 'Novais',
			'Novo Horizonte', 'Nuporanga', 'Ocau√ßu', '√ìleo', 'Ol√≠mpia',
			'Onda Verde', 'Oriente', 'Orindi√∫va', 'Orl√¢ndia', 'Osasco',
			'Oscar Bressane', 'Osvaldo Cruz', 'Ourinhos', 'Ouro Verde', 'Ouroeste',
			'Pacaembu', 'Palestina', 'Palmares Paulista', 'Palmeira d\'Oeste', 'Palmital',
			'Panorama', 'Paragua√ßu Paulista', 'Paraibuna', 'Para√≠so', 'Paranapanema',
			'Paranapu√£', 'Parapu√£', 'Pardinho', 'Pariquera-A√ßu', 'Parisi',
			'Patroc√≠nio Paulista', 'Paulic√©ia', 'Paul√≠nia', 'Paulist√¢nia', 'Paulo de Faria',
			'Pederneiras', 'Pedra Bela', 'Pedran√≥polis', 'Pedregulho', 'Pedreira',
			'Pedrinhas Paulista', 'Pedro de Toledo', 'Pen√°polis', 'Pereira Barreto', 'Pereiras',
			'Peru√≠be', 'Piedade', 'Pilar do Sul', 'Pindamonhangaba', 'Pindorama', 
			'Pinhalzinho', 'Piquerobi', 'Piquete', 'Piracaia', 'Piracicaba', 
			'Piraju', 'Piraju√≠', 'Pirangi', 'Pirapora do Bom Jesus', 'Pirapozinho', 
			'Pirassununga', 'Piratininga', 'Pitangueiras', 'Planalto', 'Platina', 
			'Po√°', 'Poloni', 'Pomp√©ia', 'Ponga√≠', 'Pontal', 'Pontalinda', 
			'Pontes Gestal', 'Populina', 'Porangaba', 'Porto Feliz', 'Porto Ferreira', 
			'Potim', 'Potirendaba', 'Pracinha', 'Prad√≥polis', 'Praia Grande', 
			'Prat√¢nia', 'Presidente Alves', 'Presidente Bernardes', 'Presidente Epit√°cio', 
			'Presidente Prudente', 'Presidente Venceslau', 'Promiss√£o', 'Quadra', 
			'Quat√°', 'Queiroz', 'Queluz', 'Quintana', 'Rafard', 'Rancharia', 
			'Reden√ß√£o da Serra', 'Regente Feij√≥', 'Regin√≥polis', 'Registro', 
			'Restinga', 'Ribeira', 'Ribeir√£o Bonito', 'Ribeir√£o Branco', 'Ribeir√£o Corrente', 
			'Ribeir√£o do Sul', 'Ribeir√£o dos √çndios', 'Ribeir√£o Grande', 'Ribeir√£o Pires', 
			'Ribeir√£o Preto', 'Rifaina', 'Rinc√£o', 'Rin√≥polis', 'Rio Claro', 
			'Rio das Pedras', 'Rio Grande da Serra', 'Riol√¢ndia', 'Riversul', 'Rosana', 
			'Roseira', 'Rubi√°cea', 'Rubin√©ia', 'Sabino', 'Sagres', 'Sales', 
			'Sales Oliveira', 'Sales√≥polis', 'Salmour√£o', 'Saltinho', 'Salto', 
			'Salto de Pirapora', 'Salto Grande', 'Sandovalina', 'Santa Ad√©lia', 
			'Santa Albertina', 'Santa B√°rbara d\'Oeste', 'Santa Branca', 'Santa Clara d\'Oeste', 
			'Santa Cruz da Concei√ß√£o', 'Santa Cruz da Esperan√ßa', 'Santa Cruz das Palmeiras', 
			'Santa Cruz do Rio Pardo', 'Santa Ernestina', 'Santa F√© do Sul', 
			'Santa Gertrudes', 'Santa Isabel', 'Santa L√∫cia', 'Santa Maria da Serra', 
			'Santa Mercedes', 'Santa Rita d\'Oeste', 'Santa Rita do Passa Quatro', 
			'Santa Rosa de Viterbo', 'Santa Salete', 'Santana da Ponte Pensa', 
			'Santana de Parna√≠ba', 'Santo Anast√°cio', 'Santo Andr√©', 'Santo Ant√¥nio da Alegria', 
			'Santo Ant√¥nio de Posse', 'Santo Ant√¥nio do Aracangu√°', 'Santo Ant√¥nio do Jardim', 
			'Santo Ant√¥nio do Pinhal', 'Santo Expedito', 'Sant√≥polis do Aguape√≠', 
			'Santos', 'S√£o Bento do Sapuca√≠', 'S√£o Bernardo do Campo', 'S√£o Caetano do Sul', 
			'S√£o Carlos', 'S√£o Francisco', 'S√£o Jo√£o da Boa Vista', 'S√£o Jo√£o das Duas Pontes',
			'S√£o Jo√£o de Iracema','S√£o Jo√£o do Pau dalho','S√£o Joaquim da Barra','S√£o Jos√© da Bela Vista','S√£o Jos√© do Barreiro','S√£o Jos√© do Rio Pardo','S√£o Jos√© do Rio Preto','S√£o Jos√© dos Campos',
			'S√£o Louren√ßo da Serra','S√£o Luiz do Paraitinga','S√£o Manuel','S√£o Miguel','Arcanjo','S√£o Paulo',
			'S√£o Pedro','S√£o Pedro do Turvo','S√£o Roque','S√£o Sebasti√£o','S√£o Sebasti√£o da Grama','S√£o Sim√£o','S√£o Vicente','Sarapu√≠',
			'Sarutai√°','Sebastian√≥polis do Sul','Serra Azul','Serra Negra','Serrana','Sert√£ozinho','Sete  Barras','Sever√≠nia','Silveiras',
			'Socorro','Sorocaba','Sud Mennucci','Sumar√©','Suzan√°polis','Suzano','Tabapu√£','Tabatinga','Tabo√£o da Serra','Taciba','Tagua√≠','Taia√ßu','Tai√∫va',			'Tamba√∫','Tanabi','Tapira√≠','Tapiratiba','Taquaral','Taquaritinga','Taquarituba','Taquariva√≠',
			'Tarabai','Tarum√£','Tatu√≠','Taubat√©','Tejup√°','Teodoro Sampaio','Terra Roxa','Tiet√™','Timburi',
			'Torre de Pedra','Torrinha','Trabiju','Trememb√©','Tr√™s Fronteiras','Tuiuti','Tup√£','Tupi Paulista',
			'Turi√∫ba','Turmalina','Ubarana','Ubatuba','Ubirajara','Uchoa','Uni√£o Paulista','Ur√¢nia', 'Uru',
			'Urup√™s','Valentim Gentil','Valinhos','Valpara√≠so','Vargem','Vargem Grande do Sul','Vargem Grande Paulista',
			'V√°rzea Paulista','Vera Cruz','Vinhedo','Viradouro','Vista Alegre do Alto','Vit√≥ria Brasil','Votorantim','Votuporanga','Zacarias','Peru√≠be'
            ];
            this.isLoaded = true;
            return this.cidades;
        }
    }

    // Criar o select de cidades
    createCidadeSelect(targetElementId, placeholder = 'Selecione a cidade...') {
        const container = document.getElementById(targetElementId);
        if (!container) {
            console.error(`‚ùå Elemento ${targetElementId} n√£o encontrado!`);
            return;
        }

        // Criar o select
        const select = document.createElement('select');
        select.id = `${targetElementId}_select`;
        select.className = 'form-control cidade-select';
        select.style.marginBottom = '0.5rem';

        // Op√ß√£o padr√£o
        const defaultOption = document.createElement('option');
        defaultOption.value = '';
        defaultOption.textContent = placeholder;
        select.appendChild(defaultOption);

        // Adicionar as cidades
        this.cidades.forEach(cidade => {
            const option = document.createElement('option');
            option.value = cidade;
            option.textContent = cidade;
            select.appendChild(option);
        });

        // Op√ß√£o "Outra cidade"
        const outraOption = document.createElement('option');
        outraOption.value = 'outra';
        outraOption.textContent = 'üèôÔ∏è Outra cidade (digite abaixo)';
        select.appendChild(outraOption);

        // Inserir o select antes do input existente
        const inputElement = container.querySelector('input');
        if (inputElement) {
            this.inputElement = inputElement;
            this.inputElement.placeholder = 'Digite o endere√ßo completo ou selecione uma cidade acima';
            container.insertBefore(select, inputElement);
            
            // Event listener para o select
            select.addEventListener('change', (e) => {
                const selectedValue = e.target.value;
                if (selectedValue && selectedValue !== 'outra') {
                    // Preencher o input com a cidade selecionada
                    this.inputElement.value = selectedValue + ', SP';
                    this.inputElement.focus();
                    // Posicionar cursor no final
                    setTimeout(() => {
                        this.inputElement.setSelectionRange(this.inputElement.value.length, this.inputElement.value.length);
                    }, 100);
                } else if (selectedValue === 'outra') {
                    // Limpar e focar no input para digita√ß√£o livre
                    this.inputElement.value = '';
                    this.inputElement.focus();
                    this.inputElement.placeholder = 'Digite o endere√ßo completo da cidade';
                }
            });

            this.selectElement = select;
            console.log('‚úÖ Select de cidades criado com sucesso!');
        } else {
            console.error('‚ùå Input n√£o encontrado no container!');
        }
    }

    // Inicializar o sistema
    async init(targetElementId, placeholder) {
        await this.loadCidades();
        this.createCidadeSelect(targetElementId, placeholder);
    }

    // M√©todo para buscar cidade por nome (para autocomplete futuro)
    searchCidade(query) {
        if (!query || query.length < 2) return [];
        
        const queryLower = query.toLowerCase();
        return this.cidades.filter(cidade => 
            cidade.toLowerCase().includes(queryLower)
        );
    }

    // Validar se a cidade existe
    isValidCidade(cidade) {
        return this.cidades.includes(cidade);
    }
}

// Inst√¢ncia global
const cidadesSP = new CidadesSP();

// Inicializar quando o DOM estiver pronto
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ Iniciando sistema de cidades...');
    
    // Verificar se estamos na p√°gina de agendamento
    const targetElement = document.getElementById('destino');
    if (targetElement) {
        // Aguardar um pouco para garantir que tudo foi carregado
        setTimeout(() => {
            cidadesSP.init('destino-container', 'üèôÔ∏è Selecione a cidade de destino...');
        }, 500);
    }
});

// Fun√ß√£o para validar formul√°rio (opcional)
function validateDestinoForm() {
    const destinoInput = document.getElementById('destino');
    if (destinoInput && destinoInput.value.trim() === '') {
        alert('Por favor, selecione uma cidade ou digite o endere√ßo de destino!');
        return false;
    }
    return true;
}

// =======VALIDA√á√ÉO PARA O PREENCHIMENTO DO  FORMUL√ÅRIO ========

// Fun√ß√£o de valida√ß√£o simples para destino
function validarDestinoSimples() {
    const destinoInput = document.getElementById('destino');
    if (!destinoInput) return true;
    
    const valor = destinoInput.value.trim();
    
    // Se estiver vazio, n√£o validar ainda
    if (!valor) return true;
    
    // Se tem menos de 5 caracteres, muito curto
    if (valor.length < 5) return true;
    
    // Palavras que indicam endere√ßo v√°lido
    const palavrasValidas = [
        'rua', 'av', 'avenida', 'alameda', 'travessa', 'pra√ßa', 'praca',
        'estrada', 'rodovia', 'br', 'sp', 'centro', 'bairro', 'jardim', 
        'vila', 'conjunto', 'hospital', 'clinica', 'cl√≠nica', 'posto', 
        'ubs', 'santa casa', 'hospital', 'n√∫mero', 'n¬∫', 'n¬∞', 'km'
    ];
    
    const valorLower = valor.toLowerCase();
    
    // Verificar se tem pelo menos uma palavra v√°lida
    const temPalavraValida = palavrasValidas.some(palavra => 
        valorLower.includes(palavra)
    );
    
    // Verificar se tem n√∫meros (indica endere√ßo)
    const temNumeros = /\d/.test(valor);
    
    // Se tem palavra v√°lida OU n√∫meros, √© v√°lido
    if (temPalavraValida || temNumeros) {
        mostrarSucessoDestino();
        return true;
    } else {
        mostrarAvisoDestino();
        return false;
    }
}

// Mostrar aviso simples
function mostrarAvisoDestino() {
    const input = document.getElementById('destino');
    if (!input) return;
    
    // Remover aviso anterior
    const avisoAnterior = input.parentElement.querySelector('.aviso-destino');
    if (avisoAnterior) avisoAnterior.remove();
    
    // Criar novo aviso
    const aviso = document.createElement('div');
    aviso.className = 'aviso-destino';
    aviso.style.cssText = `
        color: #f2823c;
        font-size: 0.875rem;
        margin-top: 0.25rem;
        display: flex;
        align-items: center;
    `;
    aviso.innerHTML = `
        <span style="margin-right: 0.5rem;">üí°</span>
        <span>Digite um endere√ßo completo (ex: Rua das Flores, 123, Centro)</span>
    `;
    
    input.parentElement.appendChild(aviso);
    
    // Bordar laranja
    input.style.borderColor = '#f2823c';
}

// Mostrar sucesso
function mostrarSucessoDestino() {
    const input = document.getElementById('destino');
    if (!input) return;
    
    // Remover avisos
    const avisoAnterior = input.parentElement.querySelector('.aviso-destino');
    if (avisoAnterior) avisoAnterior.remove();
    
    // Bordar verde
    input.style.borderColor = '#79b24a';
    
    // Remover cor ap√≥s 2 segundos
    setTimeout(() => {
        input.style.borderColor = 'var(--border-color, #e5e5e5)';
    }, 2000);
}

// Adicionar valida√ß√£o ao input quando sair do campo
document.addEventListener('DOMContentLoaded', function() {
    setTimeout(() => {
        const destinoInput = document.getElementById('destino');
        if (destinoInput) {
            destinoInput.addEventListener('blur', validarDestinoSimples);
            
            // Tamb√©m validar enquanto digita (com delay)
            let timeoutId;
            destinoInput.addEventListener('input', function() {
                clearTimeout(timeoutId);
                timeoutId = setTimeout(() => {
                    if (this.value.length > 10) {
                        validarDestinoSimples();
                    }
                }, 1000);
            });
        }
    }, 1000);
});